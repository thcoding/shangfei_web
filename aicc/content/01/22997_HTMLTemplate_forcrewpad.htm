<!DOCTYPE html>
<html>
<head>
    <title></title>
    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
    <!--多语言js-->
    <script src="../library/jsDevelop/Language.js?v=4.1.16.1" type="text/javascript"></script>
    <!--jquery-->
    <!--link href="../jsDevelop/jquery-ui.min.css" rel="stylesheet" type="text/css" />-->
    <script src="../library/jsDevelop/jquery-2.0.3.min.js?v=4.1.16.1" type="text/javascript"></script>
    <!-- <script src="../js/jquery.layout-latest.js" type="text/javascript"></script>-->
    <!-- <script src="../js/jquery-ui-1.10.3.custom.min.js" type="text/javascript"></script>-->
    <!--underscore-->
    <script src="../library/jsDevelop/underscore.js?v=4.1.16.1" type="text/javascript"></script>
    <script src="../library/jsDevelop/backbone.js?v=4.1.16.1" type="text/javascript"></script>
    <!-- <script src="../js/test.js" type="text/javascript"></script>-->
    <!--bootstrap-->
    <link href="../library/cssDevelop/bootstrap.css?v=4.1.16.1" rel="stylesheet" type="text/css" />
    <script src="../library/jsDevelop/bootstrap.js?v=4.1.16.1" type="text/javascript"></script>
    <script src="../library/jsDevelop/jquery.blockUI.js?v=4.1.16.1" type="text/javascript"></script>
    <!--jstree 新版本的jstree-->
    <!--<link href="../jsDevelop/jstree/style.min.css" rel="stylesheet" type="text/css" />
    <script src="../js/jstree.min.js" type="text/javascript"></script>-->
    <!--<script src="../jquery.jsTree/jquery.jstree.js" type="text/javascript"></script>-->
    <!-- colorPicker-->
    <!-- <link href="../jsDevelop/bootstrap-colorpicker.min.css" rel="stylesheet"
        type="text/css" />
    <script src="../js/bootstrap-colorpicker.min.js" type="text/javascript"></script>-->
    <!--pelesys-->
    <script src="../library/jsDevelop/views.js?v=4.1.16.1" type="text/javascript"></script>
    <script src="../library/jsDevelop/models.js?v=4.1.16.1" type="text/javascript"></script>
    <link href="../library/cssDevelop/Pelesys.Page.css?v=4.1.16.1" rel="stylesheet" type="text/css" />
    <!--TweenMax-->
    <script src="../library/jsDevelop/TweenMax.min.js?v=4.1.16.1" type="text/javascript"></script>
    <!--beizer-->
    <script src="../library/jsDevelop/raphael-min.js?v=4.1.16.1" type="text/javascript"></script>
    <script src="../library/jsDevelop/Utilities.js?v=4.1.16.1" type="text/javascript"></script>
    <script src="../library/jsDevelop/Galaxy.Controls.BezierAnimation.js?v=4.1.16.1" type="text/javascript"></script>
    <!--ckeditor-->
    <!-- <script src="../ckeditor_4.3.2_basic/ckeditor/ckeditor.js" type="text/javascript"></script>-->
    <!--鼠标右键-->
    <!-- <script src="../js/jquery.contextMenu.js" type="text/javascript"></script>
    <link href="../jsDevelop/jquery.contextMenu.css" rel="stylesheet" type="text/css" />-->
    <!--自定义js-->
    <!--<script src="../js/BindEvent.js" type="text/javascript"></script>-->
    <script src="../library/jsDevelop/InitJs.js?v=4.1.16.1" type="text/javascript"></script>
    <!--jsplayer-->
    <script src="../library/jwplayer/jwplayer.js?v=4.1.16.1" type="text/javascript"></script>
    <script type="text/javascript">
        Globle.InitPackageData='[{"key":400679,"pType":"board","value":{"pid":"ele5","pType":"board","pTitle":"","pTop":0,"pLeft":0,"pWidth":1000,"pHeight":550,"pFileID":"","pFileUrl":"#","pName":"","pMaterialUsageID":"","BelongToElementID":"","pParentElementID":"inactionArea","pFocus":false,"isAnimationPanel":true,"backgroundColor":"#FFF","pUpdateAttributeView":true,"pIsTriggerControl":true,"pUpdateTriggerView":false,"pInitControlVisible":1,"IsSupportMultipleFile":false,"BelongToLayerID":"","SequenceID":0,"pUpdateManuallyResourceView":true,"IsSuppotZIndex":false,"silent":true},"MaterialUsageIDArray":"","ActionIDArray":"","BelongToBoardID":"","BelongToElementID":"","GoToPageID":"","BelongToLayerID":""},{"key":400680,"pType":"WebForm","value":{"pElementName":"网页内容","SequenceID":1,"IsSuppotZIndex":true,"pIsTriggerControl":false,"pid":"400680_Pelesys","IsSupportMultipleFile":false,"pFileID":"83847","pFileName":"0318test","pFileUrl":"../../UploadLocalResource/LocalResource/135/a9f24d31-e42b-42e2-b7f7-87b25d3f491a0318test.zip","pMaterialUsageID":"189397","pName":"网页内容","pType":"WebForm","pTop":30,"pLeft":30,"pWidth":900,"pHeight":500,"pTextContentUrl":"","pTextContentEmbed":"","pContentType":"localResource","pParentElementID":"400679_Pelesys","pFocus":true,"IsSupportMultipleSelect":true,"isAnimationPanel":true,"pUpdateAttributeView":false,"pUpdateContentView":false,"BelongToLayerID":"","silent":true,"pThumbImageUrl":"ZIP.png","pResourceType":1,"pVersoin":"","pExtendFileID":"","pFileResourceFromLocation":"测试HTML包导入"},"MaterialUsageIDArray":",189397,","ActionIDArray":"","BelongToBoardID":"400679","BelongToElementID":"","GoToPageID":"","BelongToLayerID":""}]';
        var hasVedio = "0";
        var hasAudio = "0";
        //        console.log("sdf");
        $(function () {
            $("body").on("click", ".AudioPanelDelete", function () {
                $(".AudioPanel").css("display", "none");
                var autoPlayAudios = Globle.AllModelCollection.where({
                    "pParentElementID": Globle.CurrentBoard.get("pid"),
                    "pType": "Audio",
                    "isAutoPlay": !0
                });
                _.each(autoPlayAudios, function (item, index) {
                    //                    $("#" + item.get("pid") + "_preview").css("display", "none");
                    if (item.get("isPadPlayShow") == "show") {
                        $("#" + item.get("pid") + "_preview").css({
                            "left": item.get("pLeft") + "px",
                            "top": item.get("pTop") + "px",
                            "z-index": item.get("SequenceID")
                        })
                    }
                    else {
                        $("#" + item.get("pid") + "_preview").css({
                            "left": "1200px"
                        });
                    }
                });
            });

            InitSpecialHtml();

            var tempJson = JSON.parse(Globle.InitPackageData);

            //所有的静态html已经在该页面存在,因此在往集合里加入model时,要设置slient:true;
            //使用数据,初始化Globle.AllModelCollection,用来提供给GreenSockAnimationElementSelf()使用,用来初始化滑动轮转和序列帧动画.
            //使用数据,初始化Globle.AnimationBaseModelCollection,用来提供给GreenSockAnimation()使用,用来初始化所有的设置的动作.

            GenerateModel(tempJson, !0, location.href.indexOf("Layer") >= 0);

            //设置一下Globle.BoardModelCollection
            Globle.CurrentBoard = Globle.BoardModelCollection.head();

            //如果判断出是在crewpad环境播放,作如下处理
            //处理逻辑:
            //1. 替换当前页面内的所有的glstudio元素内容.
            //2. 为每个glstudio 绑定jk设计的js调用方法.
            //3. jk设计的调用格式:parent.sendToActionScript(“llgs”,”crewpadgls1111://crewpadplayer/?source=gls”)
            //4. 对于Catia元素, 相同的处理逻辑
            if (location.href.toLowerCase().indexOf("_forcrewpad") > 0) {
                _.each($("[ptype=GlStudio]"), function (glstudioItem, index) {
                    $(glstudioItem).empty().text("点击查看对应的GLStudio").css({
                        "text-align": "center",
                        "line-height": glstudioItem.style.height,
                        "cursor": "pointer",
                        "border": "1px solid"
                    })
                    .click(function () {
                        try {
                            //                    cc.comac.yaw.part1_crewpadgls99_2.1.ipa
                            var ipaFullPath = Globle.AllModelCollection.get(parseInt(glstudioItem.id)).get("RelateIpaFullPath");

                            ipaFullPath = ipaFullPath.split('/')[ipaFullPath.split('/').length - 1];

                            ipaFullPath = ipaFullPath.split("_")[1];

                            //                            alert(ipaFullPath + "://crewpadplayer/?source=gls");

                            parent.sendToActionScript("llgs", ipaFullPath + "://crewpadplayer/?source=gls");

                        } catch (e) {
                            alert(e.message);
                        }
                    });
                });

                _.each($("[ptype=Catia]"), function (glstudioItem, index) {
                    $(glstudioItem).empty().text("点击查看对应的Catia").css({
                        "text-align": "center",
                        "line-height": glstudioItem.style.height,
                        "cursor": "pointer",
                        "border": "1px solid"
                    })
                    .click(function () {
                        try {
                            //                    cc.comac.yaw.part1_crewpadgls99_2.1.ipa
                            var ipaFullPath = Globle.AllModelCollection.get(parseInt(glstudioItem.id)).get("RelateIpaFullPath");


                            //                            alert(ipaFullPath + "://crewpadplayer/?source=gls");
                            //                            alert('调试信息: /r/n 1. 准备调用的方法签名为:parent.sendToActionScript("l3dvia", "threedviahd://crewpadplayer/?source=' + ipaFullPath + '")');

                            parent.sendToActionScript("l3dvia", "threedviahd://crewpadplayer/?source=" + ipaFullPath);

                        } catch (e) {
                            alert(e.message);
                        }
                    });
                });
                IpadAudioAndVideoAutoPlay();
            }
            //Scorm
            else if (window.top.location.href.indexOf("launchSCO.html") > 0) {
                IpadAudioAndVideoAutoPlay();
            }
            else {
                $(".AudioPanel").css("display", "none");
            }

            //            alert(window.top.location.href);

            GreenSockAnimationElementSelf();

            //            var tempModelList = GetAllModelHTML(!0)[1];
            //            //            debugger;
            //            GreenSockAnimation(tempModelList, !1);
            //过滤一遍视频元素,初始化每个视频元素
            GetCurrentBoardAllElementsByType("Video").forEach(function (item) {
                hasVedio = "1";
                if (item.get("isLayerContent")) {
                    //说明是页面中插入的层中包含的视频,那么动态修改一下pFileUrl的路径
                    //但是如果当前页面是预览的页面,才需要替换路径
                    if (location.href.indexOf("_Preview.htm") >= 0)
                        item.set({
                            pFileUrl: "../" + item.attributes.pFileUrl,
                            silent: !0
                        });
                    else {
                        //说明是学习状态,那么需要将文件路径更新为根路径
                        item.set({
                            pFileUrl: item.attributes.pFileUrl.substr(item.attributes.pFileUrl.lastIndexOf('/') + 1),
                            silent: !0
                        });
                    }
                    VideoModel.CreatePlayer(item, "preview_player_" + item.get("pid") + "_preview", !0);
                }
                else {
                    VideoModel.CreatePlayer(item, "preview_player_" + item.get("pid"), !0);
                }
            });
            //过滤一遍元素,初始化每个音频元素
            GetCurrentBoardAllElementsByType("Audio").forEach(function (item) {
                hasAudio = "1";
                if (item.get("isLayerContent")) {
                    //说明是页面中插入的层中包含的音频,那么动态修改一下pFileUrl的路径
                    //但是如果当前页面是预览的页面,才需要替换路径
                    if (location.href.indexOf("_Preview.htm") >= 0)
                        item.set({
                            pFileUrl: "../" + item.attributes.pFileUrl,
                            silent: !0
                        })
                    else {
                        //说明是学习状态,那么需要将文件路径更新为根路径
                        item.set({
                            pFileUrl: item.attributes.pFileUrl.substr(item.attributes.pFileUrl.lastIndexOf('/') + 1),
                            silent: !0
                        });
                    }
                    AudioModel.CreatePlayer(item, "preview_player_" + item.get("pid") + "_preview", !0);
                }
                else
                    AudioModel.CreatePlayer(item, "preview_player_" + item.get("pid"), !0);
            });

            $("body").on("click", ".SelfIsTrigger", function (event) {
                console.log(event.currentTarget.id);
                var $TargetElement = $(event.currentTarget);
                if ($TargetElement.attr("pType") == "Correct" || $TargetElement.attr("pType") == "Incorrect") {

                    var imagePrevPath = "";
                    if (location.href.toString().indexOf("_HTMLTemplate_Preview") > 0) {
                        //如果是学习状态
                        imagePrevPath = "../../../HTMLTemplate/Animation/AnimationResource/images/";
                    }
                    else {
                        //如果不是学习状态
                        imagePrevPath = ".." + "" + "/library/" + "\/" + "images";
                    }
                    switch ($TargetElement.attr("pType")) {
                        case "Correct":
                            $.blockUI({
                                message: "<img src='" + imagePrevPath + "/\/" + "correct.png' />",
                                css: {
                                    border: 'none',
                                    backgroundColor: 'transparent'
                                },
                                timeout: 1000
                            });
                            break;

                        case "Incorrect":
                            $.blockUI({
                                message: "<img src='" + imagePrevPath + "/\/" + "incorrect.png' />",
                                css: {
                                    border: 'none',
                                    backgroundColor: 'transparent'
                                },
                                timeout: 1000
                            });
                            break;
                    }
                    return false; //对于正确和错误判断, 没有触发器属性, 因此执行到这里,直接返回
                }

                if (event.target.id == event.currentTarget.id) {
                    coreControlAction(event);
                }
                else if ($(event.target).parents("[id=" + event.currentTarget.id + "]").attr("id") == event.currentTarget.id) {
                    //针对有父容器的元素
                    coreControlAction(event);
                }
            });

            //ipad端
            if (location.href.toLowerCase().indexOf("_forcrewpad") > 0 || window.top.location.href.indexOf("launchSCO.html") > 0) {
                //如果存在视频或者音频
                if (hasVedio == "1" || hasAudio == "1") {
                    var autoPlayAudios = Globle.AllModelCollection.where({
                        "pParentElementID": Globle.CurrentBoard.get("pid"),
                        "pType": "Audio",
                        "isAutoPlay": !0
                    });
                    var autoPlayVideos = Globle.AllModelCollection.where({
                        "pParentElementID": Globle.CurrentBoard.get("pid"),
                        "pType": "Video",
                        "isAutoPlay": !0
                    });
                    //如果视频或者音频有自动播放的
                    if (autoPlayAudios.length > 0 || autoPlayVideos.length > 0) {
                        $.blockUI({
                            message: "<div class='AudioRemindDiv'><span class='AudioRemindContent'>" + GetTranslateUI('Tipaddonotsupportthevideoandaudioplayingautomatically') + "</span></div>",
                            css: {
                                border: 'none',
                                width: 390,
                                backgroundColor: '#ffe691'
                            },
                            timeout: 2400
                        });
                        setTimeout('GenerateAutoAction()', 2400);
                    }
                    //没有自动播放的视频或者音频，但是有视频元素存在
                    else if (hasVedio == "1") {
                        $.blockUI({
                            message: "...",
                            css: {
                                border: 'none'
                            }, timeout: 2400
                        });
                        setTimeout('GenerateAutoAction()', 2400);
                    }
                    else {
                        GenerateAutoAction();
                    }
                }
                else {
                    GenerateAutoAction();
                }
            }
            //非ipad端
            else {
                //不是ipad端存在视频
                if (hasVedio == "1") {
                    $.blockUI({
                        message: "...",
                        css: {
                            border: 'none'
                        }, timeout: 2400
                    });
                    setTimeout('GenerateAutoAction()', 2400);
                }
                else {
                    GenerateAutoAction();
                }
            }

            var returnValue = getQueryString("return");
            if ($.trim(returnValue) != '') {
                retrunHtml = "<div style='position: absolute;top: 10px;left: 10px;border: 1px solid;padding: 5px; border-radius: 10px;z-index:99999;cursor:pointer;' onclick='RedirectPreHtml();'>" + GetTranslateUI('TReturn') + "</div>";
                $("body").append(retrunHtml);
            }
            console.log(returnValue);

            try {
                $("[src$='gif']").each(function (item, index) {
                    this.attributes.src.value = (this.attributes.src.value + "?v=" + _.random(1, 100));
                });

            } catch (e) {

            }
            //如果是pad端
            if (location.href.toLowerCase().indexOf("_forcrewpad") > 0 || window.top.location.href.indexOf("launchSCO.html") > 0) {
                CrewPadAutoPlayAudio();
            }
        });
        function RedirectPreHtml() {
            parent.sendToActionScript("lu", getQueryString("return"));
        }
        //处理在ipad的提示语
        function IpadAudioAndVideoAutoPlay() {
            var noAutoPlayAudios = Globle.AllModelCollection.where({
                "pParentElementID": Globle.CurrentBoard.get("pid"),
                "pType": "Audio",
                "isAutoPlay": !1,
                "isShowControlBar": !1
            });
            if (noAutoPlayAudios.length > 0) {
                _.each(noAutoPlayAudios, function (item, index) {
                    item.set({
                        isShowControlBar: !0
                    });
                });
            }


            var autoPlayAudios = Globle.AllModelCollection.where({
                "pParentElementID": Globle.CurrentBoard.get("pid"),
                "pType": "Audio",
                "isAutoPlay": !0
            });

            if (autoPlayAudios.length > 0) {
                _.each(autoPlayAudios, function (item, index) {
                    //如果是显示控制条
                    if (item.get("isShowControlBar")) {
                        item.set({
                            isPadPlayShow: "show"
                        })
                    }
                    //如果不显示控制条
                    else {
                        item.set({
                            isShowControlBar: !0,
                            isPadPlayShow: "hide"
                        });
                    }
                });
            }
            //如果没有自动播放的音频
            if (autoPlayAudios.length == 0) {
                $(".AudioPanel").css("display", "none");
            }
        }
    </script>
    <style type="text/css">
        .AudioRemindDiv
        {
            width: 100%;
            height: 50px;
        }
        .AudioRemindIcon
        {
            top: 10px;
            left: 20px;
            position: absolute;
            height: 30px;
            width: 30px;
            border-radius: 15px;
            border: 2px solid White;
            text-align: center;
            font-size: 30px;
            line-height: 30px;
            color: White;
        }
        .AudioRemindContent
        {
            position: absolute;
            left: 30px;
            top: 15px;
        }
    </style>
</head>
<body style="width: 100%; height: 100%; overflow: hidden;">
    <div ptype="board" class="SelfNotIsTrigger pcontent" style="width:1000px;height:550px; background-color:#FFF; overflow:hidden; position:relative; " id="400679_Pelesys_preview"><div ptype="WebForm" id="400680_Pelesys_preview" pcontenttype="localResource" class="SelfNotIsTrigger pcontent" style="width:900px;height:500px; position:absolute;z-index:1; top:30px;left:30px;"><iframe style="width:100%;height:100%;" psrc="../../UploadLocalResource/LocalResource/135/a9f24d31-e42b-42e2-b7f7-87b25d3f491a0318test/0318test.html"></iframe></div></div>
    <div class="AudioPanel" style="width: 260px; height: 50px; position: absolute; left: 375px;
        top: 500px; z-index: 999998; background: #3E3E40;">
        <span class="AudioPanelDelete" style="width: 20px; height: 20px; position: absolute;
            color: white; cursor: pointer; top: 0px; right: 5px; font-size: 30px;">×</span>
    </div>
</body>
</html>
